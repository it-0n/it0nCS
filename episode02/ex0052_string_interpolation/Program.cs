using System;

class Program
{
    static void Main()
    {
        // Пример 1: Форматирование целых чисел
        int number = 123456;
        WriteLine($"Обычное число: {number}");
        WriteLine($"Число c дополнительными разрядами слева: {number:D10}");
        WriteLine($"Число с выравниванием по правому краю (10 символов): {number,12}");
        WriteLine($"Число с выравниванием по левому краю (-10 символов): {number,-12}");
        WriteLine($"Число в двоичном формате: {number:b}");
        WriteLine($"Число в шестнадцатиричном формате: {number:X}"); // большие буквы в выводимых значениях
        WriteLine($"Число в шестнадцатиричном формате: {number:x}"); // маленькие буквы в выводимых значениях
        WriteLine($"Число с разделением на разряды: {number:N0}");

        // Пример 2: Форматирование дробных чисел
        double pi = Math.PI;
        WriteLine($"Число Pi: {pi}");
        WriteLine($"Число Pi (2 знака после запятой): {pi:F2}");
        WriteLine($"Число Pi (4 знака после запятой): {pi:F4}");
        WriteLine($"Проценты: {(double)number/1000000:P4}"); //скомбинирорвано выражение приведения к double и деление

        // Пример 3: Форматирование валют
        decimal price = 1234.4321m;
        WriteLine($"Цена: {price:C}"); // C - валюта по умолчанию для текущей культуры
        WriteLine($"Цена (4 знака после запятой): {price:C4}"); // выдуманный пример для примера :)

        // Пример 4: Форматирование дат и времени
        DateTime now = DateTime.Now;
        WriteLine($"Текущая дата и время: {now}");
        WriteLine($"Только дата: {now:yyyy-MM-dd}");
        WriteLine($"Только дата: {now:dd MMMM yyyy}");
        WriteLine($"День недели и дата: {now:dddd dd MMMM yyyy}");
        WriteLine($"Только время: {now:HH:mm:ss}");

        // Пример 5: Комбинация выравнивания и форматирования
        WriteLine($"|{"Название",-15}|{"Значение",15}|");
        WriteLine($"|{"Pi",-15}|{pi,15:F3}|");
        WriteLine($"|{"Цена",-15}|{price,15:C2}|");

        // Пример 6: Сопоставление шаблонов с интерполяцией строк
        // Объяснение:
        // Этот код использует сопоставление шаблонов (pattern matching) для определения 
        // диапазона температур и соответствующего описания.
        // `switch` проверяет значение переменной `temperature` по порядку сверху вниз.
        // Как только совпадение найдено, оно возвращает результат и остальные условия не проверяются.
        var temperature = 25;
        string message = $"Температура {temperature}°C считается {temperature switch
        {
            <= -40 => "смертельно опасной",     // Если температура <= -40
            <= -25 => "очень холодной, опасной", // Если температура от -40 до -25
            <= 0 => "холодной, но приемлемой",   // Если температура от -25 до 0
            <= 19 => "прохладной",               // Если температура от 0 до 19
            <= 27 => "комфортной",               // Если температура от 19 до 27
            <= 36 => "жаркой",                   // Если температура от 27 до 36
            <= 45 => "очень жаркой",             // Если температура от 36 до 45
            _ => "чрезмерно жаркой и опасной",   // Любая температура больше 45
        }}.";
        WriteLine(message);
    }
}
